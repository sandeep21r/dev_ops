name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]  # This triggers the deployment when PRs are merged into main
  pull_request:
    branches: [ "main" ]  # This triggers the CI for PRs

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          pip install -r app/requirements.txt
          pip install pytest

      - name: Run tests
        run: |
          export PYTHONPATH=.
          pytest tests

      - name: Build Docker Image
        run: |
          docker build -t devops_project:ci-test .

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'  # Deploy only on push to main branch
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      # Set up SSH agent to use the private key stored in GitHub Secrets
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}

      
      # Create the private key file for SSH and set proper permissions
      - name: Write the SSH private key to a file
        run: |
          echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" > ~/.ssh/aws-ec2-key
          chmod 600 ~/.ssh/aws-ec2-key  # Set appropriate permissions for the private key file

      # Add EC2 host key to known_hosts
      - name: Add known_hosts for EC2
        run: |
          ssh-keyscan -H ${{ secrets.AWS_EC2_IP }} >> ~/.ssh/known_hosts

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin docker.io

      - name: Build and push Docker image
    
        run: |
          docker build -t sandy283/devops_project:latest .
          docker push sandy283/devops_project:latest




      # Deploy to EC2 by pulling the Docker image and running it
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/aws-ec2-key ubuntu@${{ secrets.AWS_EC2_IP }} \
          "sudo docker pull sandy283/devops_project:latest && \
          sudo docker run -d -p 80:80 --name devops_project sandy283/devops_project:latest
